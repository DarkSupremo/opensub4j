buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:+'
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
    distributionType = Wrapper.DistributionType.ALL
}

allprojects {

    group = 'com.github.wtekiela'
    version = '0.2.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'license'
    apply plugin: 'maven'
    apply plugin: 'signing'

    sourceCompatibility = 1.8

    license {
        header rootProject.file('LICENSE')
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
        ext.name = 'Wojciech Tekiela'

        include "**/*.java"
        exclude "**/*Test.java"
    }

    repositories {
        mavenCentral()
    }

    test {
        useTestNG()

        beforeTest { descriptor ->
            logger.lifecycle("Running test: " + descriptor)
        }

        // listen to standard out and standard error of the test JVM(s)
        onOutput { descriptor, event ->
            logger.lifecycle(event.message)
        }
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

}
